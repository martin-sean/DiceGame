package model.interfaces;

/**
 * Assignment interface for SADI representing the player
 * to be implemented by SimplePlayer class with the following constructor:
 * 	  public SimplePlayer(String playerId, String playerName, int initialPoints)
 * 
 * @author Caspar Ryan
 * 
 */
public interface Player
{
	/**
	 * @return human readable player name
	 */
	String getPlayerName();

	/**
	 * 
	 * @return number of points from setPoints()
	 */
	int getPoints();

	/**
	 * @param points
	 *            for betting (updated by GameEngineImpl with each win or loss)
	 */
	void setPoints(int points);

	/**
	 * @return the player ID which is generated by the implementing class
	 */
	String getPlayerId();

	/**
	 * 
	 * @param bet
	 *            the bet in points
	 * @return true if the player had sufficient points and the bet was placed
	 */
	boolean placeBet(int bet);

	/**
	 * @return the bet as set with placeBet()
	 */
	int getBet();

	/**
	 * @return a DicePair containing both dice values (updated from the
	 *         GameEngine)
	 * @see view.observers.interfaces.GameEngineCallback
	 */
	DicePair getRollResult();

	/**
	 * 
	 * @param rollResult
	 *            a DicePair containing both dice values (updated from the
	 *            GameEngine)
	 * @see view.observers.interfaces.GameEngineCallback
	 */
	void setRollResult(DicePair rollResult);

	/**
	 * 
	 * @return a human readable String that lists the values of this Player
	 *         instance (see OutputTrace.txt)
	 */
	@Override
	String toString();
}
